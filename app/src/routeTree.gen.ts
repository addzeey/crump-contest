/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AccountImport } from './routes/account'
import { Route as ObsLatestImport } from './routes/obs.latest'
import { Route as ContestContestIdImport } from './routes/contest.$contestId'
import { Route as AdminEntryContestidImport } from './routes/admin/entry.$contestid'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const AdminIndexLazyImport = createFileRoute('/admin/')()

// Create/Update Routes

const AccountRoute = AccountImport.update({
  path: '/account',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AdminIndexLazyRoute = AdminIndexLazyImport.update({
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/admin/index.lazy').then((d) => d.Route))

const ObsLatestRoute = ObsLatestImport.update({
  path: '/obs/latest',
  getParentRoute: () => rootRoute,
} as any)

const ContestContestIdRoute = ContestContestIdImport.update({
  path: '/contest/$contestId',
  getParentRoute: () => rootRoute,
} as any)

const AdminEntryContestidRoute = AdminEntryContestidImport.update({
  path: '/admin/entry/$contestid',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/contest/$contestId': {
      id: '/contest/$contestId'
      path: '/contest/$contestId'
      fullPath: '/contest/$contestId'
      preLoaderRoute: typeof ContestContestIdImport
      parentRoute: typeof rootRoute
    }
    '/obs/latest': {
      id: '/obs/latest'
      path: '/obs/latest'
      fullPath: '/obs/latest'
      preLoaderRoute: typeof ObsLatestImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/entry/$contestid': {
      id: '/admin/entry/$contestid'
      path: '/admin/entry/$contestid'
      fullPath: '/admin/entry/$contestid'
      preLoaderRoute: typeof AdminEntryContestidImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AccountRoute,
  ContestContestIdRoute,
  ObsLatestRoute,
  AdminIndexLazyRoute,
  AdminEntryContestidRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/account",
        "/contest/$contestId",
        "/obs/latest",
        "/admin/",
        "/admin/entry/$contestid"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/account": {
      "filePath": "account.tsx"
    },
    "/contest/$contestId": {
      "filePath": "contest.$contestId.tsx"
    },
    "/obs/latest": {
      "filePath": "obs.latest.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.lazy.tsx"
    },
    "/admin/entry/$contestid": {
      "filePath": "admin/entry.$contestid.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
